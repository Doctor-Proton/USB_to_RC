#comment lines start with #
#load some sample parameters, this is a list of all parameters that are available.  Only set the ones you need.  See parameters.c
MAVLINK_BAUD 115200  			#baud rate when using mavlink output.  Default 57600
MAVLINK_SYS_ID 1				#system id this device will send as.  Default 1
MAVLINK_COMP_ID 2				#component id this device will send as.  Default 2
MAVLINK_TARGET_SYS_ID 1 		#target system id that RC_OVERRIDE messages will be sent to.  Default 1
MAVLINK_TARGET_COMP_ID 1 		#target component id that RC_OVERRIDE messages will be sent to.  Default 1
MAVLINK_RC_OVERRIDE_INTERVAL 20	#sets the interval to send RC_OVERRIDE messages in millseconds.  Default 20
MAVLINK_HEARTBEAT_INTERVAL 1000	#sets the interval to send HEARTBEAT messages in millseconds.  Default 1000.  set to 0 to disable sending heartbeats
PPM_INVERT 1					#inverts the PPM signal.  default 0.  when set to 1 PPM signal is active low.  When set to 0 PPM signal is active high
PPM_CHANNEL_COUNT 9				#number of channels to send in the PPM stream.  default=9, maximum=9
SBUS_INVERT 1					#polarity of SBUS output.  default=0, 0=normal sbus polarity.  1=normal uart polarity.  
LOWER_US 1000					#-100% output equals this value in uS.  default 1000
UPPER_US 2000					#+100% output equals this value in uS.  default 2000


#define some output mixer X,Y,Z, and Rz have a center value of 0.5, minimum value of 0, and maximum value of 1.  This maps them from 1000 to 2000 uS
out_00=Z*1000+1000
out_01=Rz*1000+1000
out_02=(1-Y)*1000+1000
out_03=X*1000+1000

#do the same thing as above, but use a build in function to scale the value
out_04=scale_us(Z,1000,2000)

#same thing, but were showing as a percentage.  note that when printing on the terminal the value will still be shown in uS
out_05=scale_percent(Rz,-100,100)

#converts momentary button to latched value.  takes arguments old value, default value, input 0 channel, value when input 0 becomes active, input n channel, value when input n becomes active
#when nothing has happened yet (i.e. on startup) "default value" is return.  If something has happened, but no inputs are currently active "old value" is used.  If any of n inputs are active (1)
#the the output becomes input n value.  The last input has top priority
#these functions are useful for making momentary buttons work like a toggle switch or a mode selection switch
out_06=sticky_buttons_us(out_06,1200,in_07, 1100, in_08,1300,in_09,1500,in_10,1700)
out_07=sticky_buttons_percent(out_07,-80,in_07,-90, in_08,-30,in_09,30,in_10,90)
